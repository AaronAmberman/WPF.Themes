<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:System.Windows.Documents;assembly=PresentationUI">
    <!--xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"-->
    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                      Colors                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Color x:Key="ArrowPath.Background.Color">#FF000000</Color>
    <Color x:Key="ArrowPath.Border.Color">#FF000000</Color>
    <Color x:Key="Button.Background.Color">#FFDDDDDD</Color>
    <Color x:Key="Button.Border.Color">#FF707070</Color>
    <Color x:Key="Button.Foreground.Color">#000000</Color>
    <Color x:Key="Button.IsDefault.Border.Color">#FF1E90FF</Color>
    <Color x:Key="Button.MouseOver.Background.Color">#FFBEE6FD</Color>
    <Color x:Key="Button.MouseOver.Border.Color">#FF3C7FB1</Color>
    <Color x:Key="Button.Pressed.Background.Color">#FFC4E5F6</Color>
    <Color x:Key="Button.Pressed.Border.Color">#FF2C628B</Color>
    <Color x:Key="Button.Disabled.Background.Color">#FFF4F4F4</Color>
    <Color x:Key="Button.Disabled.Border.Color">#FFADB2B5</Color>
    <Color x:Key="Button.Disabled.Foreground.Color">#FF707070</Color>
    <Color x:Key="Calendar.Background.GradientStop1.Color">#FFE4EAF0</Color>
    <Color x:Key="Calendar.Background.GradientStop2.Color">#FFECF0F4</Color>
    <Color x:Key="Calendar.Background.GradientStop3.Color">#FFFCFCFD</Color>
    <Color x:Key="Calendar.Background.GradientStop4.Color">#FFFFFFFF</Color>
    <Color x:Key="Calendar.Border.GradientStop1.Color">#FFA3AEB9</Color>
    <Color x:Key="Calendar.Border.GradientStop2.Color">#FF8399A9</Color>
    <Color x:Key="Calendar.Border.GradientStop3.Color">#FF718597</Color>
    <Color x:Key="Calendar.Border.GradientStop4.Color">#FF617584</Color>
    <Color x:Key="Calendar.Foreground.Color">#FF333333</Color>
    <Color x:Key="ComboBox.Background.GradientStop1.Color">#FFF0F0F0</Color>
    <Color x:Key="ComboBox.Background.GradientStop2.Color">#FFE5E5E5</Color>
    <Color x:Key="ComboBox.Border.Color">#FFACACAC</Color>
    <Color x:Key="ComboBox.DropDown.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="ComboBox.DropDown.Border.Color">#FFFFFFFF</Color>
    <Color x:Key="ComboBox.DropShadow.Color">#00000000</Color>
    <Color x:Key="ComboBox.DropShadow.MouseOver.Color">#71000000</Color>
    <Color x:Key="ComboBox.Foreground.Color">#FF000000</Color>
    <Color x:Key="ComboBox.Glyph.Color">#FF606060</Color>
    <Color x:Key="ComboBox.Editable.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="ComboBox.Editable.Border.Color">#FFABADB3</Color>
    <Color x:Key="ComboBox.Editable.Button.Background.Color">#00000000</Color>
    <Color x:Key="ComboBox.Editable.Button.Border.Color">#00000000</Color>
    <Color x:Key="ComboBox.MouseOver.Background.GradientStop1.Color">#FFECF4FC</Color>
    <Color x:Key="ComboBox.MouseOver.Background.GradientStop2.Color">#FFDCECFC</Color>
    <Color x:Key="ComboBox.MouseOver.Border.Color">#FF7EB4EA</Color>
    <Color x:Key="ComboBox.MouseOver.Glyph.Color">#FF000000</Color>
    <Color x:Key="ComboBox.MouseOver.Editable.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="ComboBox.MouseOver.Editable.Border.Color">#FF7EB4EA</Color>
    <Color x:Key="ComboBox.MouseOver.Editable.Button.Background.GradientStop1.Color">#FFEBF4FC</Color>
    <Color x:Key="ComboBox.MouseOver.Editable.Button.Background.GradientStop2.Color">#FFDCECFC</Color>
    <Color x:Key="ComboBox.MouseOver.Editable.Button.Border.Color">#FF7EB4EA</Color>
    <Color x:Key="ComboBox.Pressed.Background.GradientStop1.Color">#FFDAECFC</Color>
    <Color x:Key="ComboBox.Pressed.Background.GradientStop2.Color">#FFC4E0FC</Color>
    <Color x:Key="ComboBox.Pressed.Border.Color">#FF569DE5</Color>
    <Color x:Key="ComboBox.Pressed.Glyph.Color">#FF000000</Color>
    <Color x:Key="ComboBox.Pressed.Editable.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="ComboBox.Pressed.Editable.Border.Color">#FF569DE5</Color>
    <Color x:Key="ComboBox.Pressed.Editable.Button.Background.GradientStop1.Color">#FFDAEBFC</Color>
    <Color x:Key="ComboBox.Pressed.Editable.Button.Background.GradientStop2.Color">#FFC4E0FC</Color>
    <Color x:Key="ComboBox.Pressed.Editable.Button.Border.Color">#FF569DE5</Color>
    <Color x:Key="ComboBox.Disabled.Background.Color">#FFF0F0F0</Color>
    <Color x:Key="ComboBox.Disabled.Border.Color">#FFD9D9D9</Color>
    <Color x:Key="ComboBox.Disabled.Glyph.Color">#FFBFBFBF</Color>
    <Color x:Key="ComboBox.Disabled.Editable.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="ComboBox.Disabled.Editable.Border.Color">#FFBFBFBF</Color>
    <Color x:Key="ComboBox.Disabled.Editable.Button.Background.Color">#00000000</Color>
    <Color x:Key="ComboBox.Disabled.Editable.Button.Border.Color">#00000000</Color>
    <Color x:Key="CurrentEntryBackground.Color">#FF0078D7</Color>
    <Color x:Key="DataGrid.Background.Color">#FFFFFAF0</Color>
    <Color x:Key="DataGrid.Border.Color">#FF688CAF</Color>
    <Color x:Key="DataGrid.Foreground.Color">#FF000000</Color>
    <Color x:Key="DataGrid.SelectAllButton.Arrow.Color">#FF000000</Color>
    <Color x:Key="DataGrid.SelectAllButton.Border.Color">#FFFFFFFF</Color>    
    <Color x:Key="DataGrid.SelectAllButton.MouseOver.Border.Color">#FFA9A9A9</Color>
    <Color x:Key="DataGrid.SelectAllButton.Pressed.Arrow.Color">#FFA9A9A9</Color>
    <Color x:Key="DatePicker.Background.Color">#00000000</Color>
    <Color x:Key="DatePicker.Background.Pressed.Color">#FF448DCA</Color>
    <Color x:Key="DatePicker.Border.GradientStop1.Color">#FFA3AEB9</Color>
    <Color x:Key="DatePicker.Border.GradientStop2.Color">#FF8399A9</Color>
    <Color x:Key="DatePicker.Border.GradientStop3.Color">#FF718597</Color>
    <Color x:Key="DatePicker.Border.GradientStop4.Color">#FF617584</Color>
    <Color x:Key="DatePicker.Border.MouseOver.GradientStop2.Color">#7FFFFFFF</Color>
    <Color x:Key="DatePicker.Border.MouseOver.GradientStop3.Color">#CCFFFFFF</Color>
    <Color x:Key="DatePicker.Border.MouseOver.GradientStop4.Color">#F2FFFFFF</Color>
    <Color x:Key="DatePicker.Border.Pressed.GradientStop1.Color">#EAFFFFFF</Color>
    <Color x:Key="DatePicker.Border.Pressed.GradientStop2.Color">#C6FFFFFF</Color>
    <Color x:Key="DatePicker.Border.Pressed.GradientStop3.Color">#6BFFFFFF</Color>
    <Color x:Key="DatePicker.Border.Pressed.GradientStop4.Color">#F4FFFFFF</Color>
    <Color x:Key="DatePicker.Calendar.Border.Color">#FF2F2F2F</Color>
    <Color x:Key="DatePicker.Calendar.Circle.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="DatePicker.Calendar.Disabled.Border.Color">#B2FFFFFF</Color>
    <Color x:Key="DatePicker.Foreground.Color">#B2FFFFFF</Color>
    <!--<Color x:Key="DatePicker.Root.Disabled.Color">#A5FFFFFF</Color>-->
    <Color x:Key="DatePicker.Inner.Background.Color">#11FFFFFF</Color>
    <Color x:Key="DatePicker.Inner.Background.GradientStop1.Color">#FFFFFFFF</Color>
    <Color x:Key="DatePicker.Inner.Background.GradientStop2.Color">#F9FFFFFF</Color>
    <Color x:Key="DatePicker.Inner.Background.GradientStop3.Color">#E5FFFFFF</Color>
    <Color x:Key="DatePicker.Inner.Background.GradientStop4.Color">#C6FFFFFF</Color>
    <Color x:Key="DatePicker.Inner.Background.Gradient.Border.Color">#BF000000</Color>
    <Color x:Key="DatePicker.Inner.Highlight.Color">#FF45D6FA</Color>
    <Color x:Key="DatePicker.Inner.Inner.Background.Color">#FF1F3B53</Color>
    <Color x:Key="DatePicker.Inner.Inner.Border.Color">#FFFFFFFF</Color>
    <Color x:Key="DatePicker.Inner.Rectangle.Background.GradientStop1.Color">#FF4084BD</Color>
    <Color x:Key="DatePicker.Inner.Rectangle.Background.GradientStop2.Color">#FFAFCFEA</Color>
    <Color x:Key="DatePicker.Inner.Rectangle.Border.GradientStop1.Color">#FF494949</Color>
    <Color x:Key="DatePicker.Inner.Rectangle.Border.GradientStop2.Color">#FF9F9F9F</Color>
    <Color x:Key="DatePicker.Popup.Background.Color">#A5FFFFFF</Color>
    <Color x:Key="DocumentViewer.Background.Color">#FFDCDCDC</Color>
    <Color x:Key="DocumentViewer.Foreground.Color">#FF000000</Color>
    <Color x:Key="DocumentViewer.Rectangle.Background.GradientStop1.Color">#66000000</Color>
    <Color x:Key="DocumentViewer.Rectangle.Background.GradientStop2.Color">#00000000</Color>
    <Color x:Key="Expander.Background.Color">#00000000</Color>
    <Color x:Key="Expander.Border.Color">#00000000</Color>
    <Color x:Key="Expander.Disabled.Foreground.Color">#FF808080</Color>
    <Color x:Key="Expander.Foreground.Color">#FF000000</Color>
    <Color x:Key="Expander.Circle.Stroke.Color">#FF333333</Color>
    <Color x:Key="Expander.Circle.Fill.Color">#FFFFFFFF</Color>
    <Color x:Key="Expander.Arrow.Stroke.Color">#FF333333</Color>
    <Color x:Key="Expander.MouseOver.Circle.Stroke.Color">#FF5593FF</Color>
    <Color x:Key="Expander.MouseOver.Circle.Fill.Color">#FFF3F9FF</Color>
    <Color x:Key="Expander.MouseOver.Arrow.Stroke.Color">#FF000000</Color>
    <Color x:Key="Expander.Pressed.Circle.Stroke.Color">#FF3C77DD</Color>
    <Color x:Key="Expander.Pressed.Circle.Fill.Color">#FFD9ECFF</Color>
    <Color x:Key="Expander.Pressed.Arrow.Stroke.Color">#FF000000</Color>
    <Color x:Key="Expander.Disabled.Circle.Stroke.Color">#FFBCBCBC</Color>
    <Color x:Key="Expander.Disabled.Circle.Fill.Color">#FFE6E6E6</Color>
    <Color x:Key="Expander.Disabled.Arrow.Stroke.Color">#FF707070</Color>
    <Color x:Key="FocusVisual.Stroke.Color">#FF000000</Color>
    <Color x:Key="FrameNavChrome.Path.Fill.GradientStop1.Color">#A0C2CCE7</Color>
    <Color x:Key="FrameNavChrome.Path.Fill.GradientStop2.Color">#60FFFFFF</Color>
    <Color x:Key="FrameNavChrome.Path.Stroke.GradientStop1.Color">#FFB7C2E3</Color>
    <Color x:Key="FrameNavChrome.Path.Stroke.GradientStop2.Color">#A0FFFFFF</Color>
    <Color x:Key="GridSplitter.Background.Color">#FFFAF0E6</Color>
    <Color x:Key="GridSplitter.PreviewStyle.Background.Color">#80000000</Color>
    <Color x:Key="GroupBox.Border.Color">#FFD5DFE5</Color>
    <Color x:Key="GroupBox.Inner.Border.Color">#00000000</Color>
    <Color x:Key="GroupBox.Inner.Inner.Border.Color">#FFFFFFFF</Color>
    <Color x:Key="GroupBox.Inner.Inner.Inner.Border.Color">#FFFFFFFF</Color>
    <Color x:Key="Label.Background.Color">#00000000</Color>
    <Color x:Key="Label.Foreground.Color">#FF000000</Color>
    <Color x:Key="Label.Disabled.Foreground.Color">#FF808080</Color>    
    <Color x:Key="ListBox.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="ListBox.Border.Color">#FFABADB3</Color>
    <Color x:Key="ListBox.Disabled.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="ListBox.Disabled.Border.Color">#FFD9D9D9</Color>
    <Color x:Key="ListBox.Foreground.Color">#FF000000</Color>
    <Color x:Key="Menu.Background.Color">#FFF0F0F0</Color>
    <Color x:Key="Menu.Foreground.Color">#FF212121</Color>
    <Color x:Key="MenuScrollButton.Background.Color">#00000000</Color>
    <Color x:Key="MenuScrollButton.Border.Color">#00000000</Color>
    <Color x:Key="NavigationWindowNavigationButton.Background.Color">#FF212121</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillEnabled.GradientStop1.Color">#FFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillEnabled.GradientStop2.Color">#CCD4E9</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillEnabled.GradientStop3.Color">#4881D2</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillEnabled.GradientStop4.Color">#001A5A</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillEnabled.GradientStop5.Color">#007BD6</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillEnabled.GradientStop6.Color">#54DAFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillEnabled.GradientStop7.Color">#86FFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillEnabled.GradientStop8.Color">#FFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillHover.GradientStop1.Color">#FFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillHover.GradientStop2.Color">#DFEDF9</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillHover.GradientStop3.Color">#3086E1</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillHover.GradientStop4.Color">#003B91</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillHover.GradientStop5.Color">#1793EF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillHover.GradientStop6.Color">#5AD4FF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillHover.GradientStop7.Color">#BDFFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillHover.GradientStop8.Color">#FFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillPressed.GradientStop1.Color">#C0D2F5</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillPressed.GradientStop2.Color">#5E7A9C</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillPressed.GradientStop3.Color">#00062D</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillPressed.GradientStop4.Color">#005F9F</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillPressed.GradientStop5.Color">#1FA4E2</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillPressed.GradientStop6.Color">#61DAFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillPressed.GradientStop7.Color">#48CFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillDisabled.GradientStop1.Color">#FFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillDisabled.GradientStop2.Color">#EBEEF5</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillDisabled.GradientStop3.Color">#D8DDEB</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillDisabled.GradientStop4.Color">#DFE2F0</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillDisabled.Background.Color">#D0FFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillDisabled.Border.Color">#FFB5BACE</Color>
    <Color x:Key="NavigationWindowNavigationButtonFillDisabled.Border2.Color">#B0B5BACE</Color>
    <Color x:Key="NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Background.Color">#00000000</Color>
    <Color x:Key="NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Background.Color">#FF1E90FF</Color>
    <Color x:Key="NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Foreground.Color">#FFFFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Backward.Foreground.Color">#FFFFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Forward.Foreground.Color">#FFFFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationButtonStrokeEnabled.GradientStop1.Color">#6C90C4</Color>
    <Color x:Key="NavigationWindowNavigationButtonStrokeEnabled.GradientStop2.Color">#315BB4</Color>
    <Color x:Key="NavigationWindowNavigationButtonStrokeEnabled.GradientStop3.Color">#002091</Color>
    <Color x:Key="NavigationWindowNavigationButtonStrokeEnabled.GradientStop4.Color">#08377C</Color>
    <Color x:Key="NavigationWindowNavigationArrowStrokeEnabled.GradientStop1.Color">#8AB1FB</Color>
    <Color x:Key="NavigationWindowNavigationArrowStrokeEnabled.GradientStop2.Color">#002874</Color>
    <Color x:Key="NavigationWindowNavigationArrowFill.GradientStop1.Color">#FFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationArrowFill.GradientStop2.Color">#EEEEEE</Color>
    <Color x:Key="NavigationWindowNavigationArrowFill.GradientStop3.Color">#B0B0B0</Color>
    <Color x:Key="NavigationWindowDownArrowFill.Border.Color">#FFFFFFFF</Color>
    <Color x:Key="NavigationWindowDownArrowFill.DropShadow.Color">#71000000</Color>
    <Color x:Key="NavigationWindowDownArrowFill.Enabled.Color">#FFA5AABE</Color>
    <Color x:Key="NavigationWindowDownArrowFill.GradientStop1.Color">#33B5DA</Color>
    <Color x:Key="NavigationWindowDownArrowFill.GradientStop2.Color">#335799</Color>
    <Color x:Key="NavigationWindowNavigationChromeBackground.GradientStop1.Color">#FFFFFF</Color>
    <Color x:Key="NavigationWindowNavigationChromeBackground.GradientStop2.Color">#E3E8F4</Color>
    <Color x:Key="NavigationWindowNavigationChromeBackground.GradientStop3.Color">#CFD7EB</Color>
    <Color x:Key="NavigationWindowNavigationChromeBackground.GradientStop4.Color">#E9ECFA</Color>
    <Color x:Key="NavigationWindowMenuItem.Panel.Background.Color">#00000000</Color>
    <Color x:Key="NavigationWindowMenuItem.Panel.Highlight.Background.GradientStop1.Color">#20DDDDDD</Color>
    <Color x:Key="NavigationWindowMenuItem.Panel.Highlight.Background.GradientStop2.Color">#80FFFFFF</Color>
    <Color x:Key="NavigationWindowMenuItem.Panel.Highlight.Border.Color">#B0B5BACE</Color>
    <Color x:Key="NavigationWindowMenuItem.Panel.Highlight.Inner.Border.Color">#A0FFFFFF</Color>
    <Color x:Key="NavigationWindowMenuItem.SubMenu.Background.Color">#FFFFFAF0</Color>
    <Color x:Key="NavigationWindowMenuItem.SubMenu.Border.Color">#FFA9A9A9</Color>
    <Color x:Key="OptionMark.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="OptionMark.Border.Color">#FF707070</Color>
    <Color x:Key="OptionMark.Foreground.Color">#FF000000</Color>
    <Color x:Key="OptionMark.Glyph.Color">#FF212121</Color>
    <Color x:Key="OptionMark.Root.Background.Color">#00000000</Color>
    <Color x:Key="OptionMark.MouseOver.Background.Color">#FFF3F9FF</Color>
    <Color x:Key="OptionMark.MouseOver.Border.Color">#FF5593FF</Color>
    <Color x:Key="OptionMark.MouseOver.Glyph.Color">#FF212121</Color>
    <Color x:Key="OptionMark.Pressed.Background.Color">#FFD9ECFF</Color>
    <Color x:Key="OptionMark.Pressed.Border.Color">#FF3C77DD</Color>
    <Color x:Key="OptionMark.Pressed.Glyph.Color">#FF212121</Color>
    <Color x:Key="OptionMark.Disabled.Background.Color">#FFE6E6E6</Color>
    <Color x:Key="OptionMark.Disabled.Border.Color">#FFBCBCBC</Color>
    <Color x:Key="OptionMark.Disabled.Glyph.Color">#FF707070</Color>    
    <Color x:Key="ProgressBar.Progress.Color">#FF06B025</Color>
    <Color x:Key="ProgressBar.Background.Color">#FFE6E6E6</Color>
    <Color x:Key="ProgressBar.Border.Color">#FFBCBCBC</Color>
    <Color x:Key="RadioButton.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="RadioButton.Border.Color">#FF707070</Color>
    <Color x:Key="RadioButton.Foreground.Color">#FF000000</Color>
    <Color x:Key="RadioButton.Glyph.Color">#FF212121</Color>
    <Color x:Key="RadioButton.MouseOver.Background.Color">#FFF3F9FF</Color>
    <Color x:Key="RadioButton.MouseOver.Border.Color">#FF5593FF</Color>
    <Color x:Key="RadioButton.MouseOver.Glyph.Color">#FF212121</Color>
    <Color x:Key="RadioButton.Pressed.Background.Color">#FFD9ECFF</Color>
    <Color x:Key="RadioButton.Pressed.Border.Color">#FF3C77DD</Color>
    <Color x:Key="RadioButton.Pressed.Glyph.Color">#FF212121</Color>
    <Color x:Key="RadioButton.Root.Background.Color">#00000000</Color>
    <Color x:Key="RadioButton.Disabled.Background.Color">#FFE6E6E6</Color>
    <Color x:Key="RadioButton.Disabled.Border.Color">#FFBCBCBC</Color>
    <Color x:Key="RadioButton.Disabled.Glyph.Color">#FF707070</Color>
    <Color x:Key="RepeatButton.Transparent.Background.Color">#00000000</Color>
    <Color x:Key="RichTextBox.Hyperlink.Disabled.Foreground.Color">#FF808080</Color>
    <Color x:Key="RichTextBox.Hyperlink.Foreground.Color">#FF0000FF</Color>
    <Color x:Key="ScrollBarButton.Background.Color">#F0F0F0</Color>
    <Color x:Key="ScrollBarButton.Border.Color">#F0F0F0</Color>
    <Color x:Key="ScrollBarButton.MouseOver.Background.Color">#DADADA</Color>
    <Color x:Key="ScrollBarButton.MouseOver.Border.Color">#DADADA</Color>
    <Color x:Key="ScrollBarButton.Pressed.Background.Color">#606060</Color>
    <Color x:Key="ScrollBarButton.Pressed.Border.Color">#606060</Color>
    <Color x:Key="ScrollBarButton.Disabled.Background.Color">#F0F0F0</Color>
    <Color x:Key="ScrollBarButton.Disabled.Border.Color">#F0F0F0</Color>
    <Color x:Key="ScrollBar.Foreground.Color">#FF000000</Color>
    <Color x:Key="ScrollBar.Glyph.Color">#606060</Color>
    <Color x:Key="ScrollBar.Thumb.Color">#CDCDCD</Color>
    <Color x:Key="ScrollBar.MouseOver.Glyph.Color">#000000</Color>
    <Color x:Key="ScrollBar.MouseOver.Thumb.Color">#A6A6A6</Color>
    <Color x:Key="ScrollBar.Pressed.Thumb.Color">#606060</Color>
    <Color x:Key="ScrollBar.Pressed.Glyph.Color">#FFFFFF</Color>
    <Color x:Key="ScrollBar.Disabled.Glyph.Color">#BFBFBF</Color>
    <Color x:Key="Separator.Background.Color">#FFC0C0C0</Color>
    <Color x:Key="Slider.Background.Color">#00000000</Color>
    <Color x:Key="Slider.Border.Color">#00000000</Color>
    <Color x:Key="Slider.SelectionRange.Background.Color">#FF1E90FF</Color>
    <Color x:Key="Slider.IsKeyboardfocused.Foreground.Color">#FF0000FF</Color>
    <Color x:Key="SliderThumb.Background.Color">#FFF0F0F0</Color>
    <Color x:Key="SliderThumb.Border.Color">#FFACACAC</Color>
    <Color x:Key="SliderThumb.Foreground.Color">#FFE5E5E5</Color>
    <Color x:Key="SliderThumb.MouseOver.Background.Color">#FFDCECFC</Color>
    <Color x:Key="SliderThumb.MouseOver.Border.Color">#FF7Eb4EA</Color>
    <Color x:Key="SliderThumb.Pressed.Background.Color">#FFDAECFC</Color>
    <Color x:Key="SliderThumb.Pressed.Border.Color">#FF569DE5</Color>
    <Color x:Key="SliderThumb.Disabled.Background.Color">#FFF0F0F0</Color>
    <Color x:Key="SliderThumb.Disabled.Border.Color">#FFD9D9D9</Color>
    <Color x:Key="SliderThumb.Track.Background.Color">#FFE7EAEA</Color>
    <Color x:Key="SliderThumb.Track.Border.Color">#FFD6D6D6</Color>
    <Color x:Key="StatusBar.Background.Color">#FFF1EDED</Color>
    <Color x:Key="StatusBar.Foreground.Color">#FF000000</Color>
    <Color x:Key="TabControl.Disabled.Foreground.Color">#FF808080</Color>
    <Color x:Key="TabControl.Foreground.Color">#FF000000</Color>
    <Color x:Key="TabControl.TabPanel.Background.Color">#FF000000</Color>
    <Color x:Key="TabItem.Selected.Background.Color">#FFFFFF</Color>
    <Color x:Key="TabItem.Selected.Border.Color">#ACACAC</Color>
    <Color x:Key="TextBoxBase.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="TextBoxBase.Foreground.Color">#FF000000</Color>
    <Color x:Key="TextBoxBase.InactiveSelection.Color">#FFDCDCDC</Color>
    <Color x:Key="TextBox.Focus.Border.Color">#FF569DE5</Color>
    <Color x:Key="TextBox.MouseOver.Border.Color">#FF7EB4EA</Color>
    <Color x:Key="TextBox.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="TextBox.Border.Color">#FFABAdB3</Color>
    <Color x:Key="TextBox.ContentHost.Background.Color">#FFABAdB3</Color>
    <Color x:Key="ToolBarButtonHover.Color">#210080FF</Color>
    <Color x:Key="ToolBarMenuBorder.Color">#FFB6BDC5</Color>
    <Color x:Key="ToolBarHorizontalOverflow.Background.HighContrast.Color">#FFFFFAF0</Color>
    <Color x:Key="ToolBarHorizontalOverflow.Path.Border.Color">#FFFFFFFF</Color>
    <Color x:Key="ToolBarVerticalOverflow.Background.HighContrast.Color">#FFFFFAF0</Color>
    <Color x:Key="ToolBarVerticalOverflow.Path.Border.Color">#FFFFFFFF</Color>
    <Color x:Key="ToolBarSubMenuBackground.Color">#FFEEF5FD</Color>
    <Color x:Key="ToolBarHorizontalBackground.Color">#FFEEF5FD</Color>
    <Color x:Key="ToolBarVerticalBackground.Color">#FFEEF5FD</Color>
    <Color x:Key="ToolBarGripper.Color">#FF6D6D6D</Color>
    <Color x:Key="ToolBarToggleButtonHorizontalBackground.Color">#FFEEF5FD</Color>
    <Color x:Key="ToolBarToggleButtonVerticalBackground.Color">#FFEEF5FD</Color>
    <Color x:Key="ToolBar.Thumb.Background.Color">#00000000</Color>
    <Color x:Key="ToolBar.Thumb.GeometryDrawing.Color">#FFFFFFFF</Color>
    <Color x:Key="ToolBar.Disabled.Foreground.Color">#FF808080</Color>
    <Color x:Key="ToolBar.DropShadow.Color">#71000000</Color>
    <Color x:Key="ToolBar.HighContrast.Background.Color">#FFFFFAF0</Color>
    <Color x:Key="TreeView.Background.Color">#FFFFFFFF</Color>
    <Color x:Key="TreeView.Border.Color">#FF828790</Color>
    <Color x:Key="TreeView.Foreground.Color">#FF828790</Color>

    
    
    
    
    
    
    
    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                     Brushes                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <SolidColorBrush x:Key="ArrowPath.Background" Color="{StaticResource ArrowPath.Background.Color}"/>
    <SolidColorBrush x:Key="ArrowPath.Border" Color="{StaticResource ArrowPath.Border.Color}"/>
    <SolidColorBrush x:Key="Button.Background" Color="{StaticResource Button.Background.Color}"/>
    <SolidColorBrush x:Key="Button.Border" Color="{StaticResource Button.Border.Color}"/>
    <SolidColorBrush x:Key="Button.Foreground" Color="{StaticResource Button.Foreground.Color}"/>
    <SolidColorBrush x:Key="Button.IsDefault.Border" Color="{StaticResource Button.IsDefault.Border.Color}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{StaticResource Button.MouseOver.Background.Color}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{StaticResource Button.MouseOver.Border.Color}"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="{StaticResource Button.Pressed.Background.Color}"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="{StaticResource Button.Pressed.Border.Color}"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="{StaticResource Button.Disabled.Background.Color}"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="{StaticResource Button.Disabled.Border.Color}"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{StaticResource Button.Disabled.Foreground.Color}"/>
    <SolidColorBrush x:Key="Calendar.Background.GradientStop1" Color="{StaticResource Calendar.Background.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="Calendar.Background.GradientStop2" Color="{StaticResource Calendar.Background.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="Calendar.Background.GradientStop3" Color="{StaticResource Calendar.Background.GradientStop3.Color}"/>
    <SolidColorBrush x:Key="Calendar.Background.GradientStop4" Color="{StaticResource Calendar.Background.GradientStop4.Color}"/>
    <SolidColorBrush x:Key="Calendar.Border.GradientStop1" Color="{StaticResource Calendar.Border.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="Calendar.Border.GradientStop2" Color="{StaticResource Calendar.Border.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="Calendar.Border.GradientStop3" Color="{StaticResource Calendar.Border.GradientStop3.Color}"/>
    <SolidColorBrush x:Key="Calendar.Border.GradientStop4" Color="{StaticResource Calendar.Border.GradientStop4.Color}"/>
    <SolidColorBrush x:Key="Calendar.Foreground" Color="{StaticResource Calendar.Foreground.Color}"/>
    <LinearGradientBrush x:Key="ComboBox.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource ComboBox.Background.GradientStop1.Color}" Offset="0.0"/>
        <GradientStop Color="{StaticResource ComboBox.Background.GradientStop2.Color}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Border" Color="{StaticResource ComboBox.Border.Color}"/>
    <SolidColorBrush x:Key="ComboBox.DropDown.Background" Color="{StaticResource ComboBox.DropDown.Background.Color}"/>
    <SolidColorBrush x:Key="ComboBox.DropDown.Border" Color="{StaticResource ComboBox.DropDown.Border.Color}"/>
    <SolidColorBrush x:Key="ComboBox.DropShadow" Color="{StaticResource ComboBox.DropShadow.Color}"/>
    <SolidColorBrush x:Key="ComboBox.DropShadow.MouseOver" Color="{StaticResource ComboBox.DropShadow.MouseOver.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Foreground" Color="{StaticResource ComboBox.Foreground.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Glyph" Color="{StaticResource ComboBox.Glyph.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Editable.Background" Color="{StaticResource ComboBox.Editable.Background.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Editable.Border" Color="{StaticResource ComboBox.Editable.Border.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Editable.Button.Background" Color="{StaticResource ComboBox.Editable.Button.Background.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Editable.Button.Border" Color="{StaticResource ComboBox.Editable.Button.Border.Color}"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource ComboBox.MouseOver.Background.GradientStop1.Color}" Offset="0.0"/>
        <GradientStop Color="{StaticResource ComboBox.MouseOver.Background.GradientStop2.Color}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="{StaticResource ComboBox.MouseOver.Border.Color}"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="{StaticResource ComboBox.MouseOver.Glyph.Color}"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="{StaticResource ComboBox.MouseOver.Editable.Background.Color}"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="{StaticResource ComboBox.MouseOver.Editable.Border.Color}"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource ComboBox.MouseOver.Editable.Button.Background.GradientStop1.Color}" Offset="0.0"/>
        <GradientStop Color="{StaticResource ComboBox.MouseOver.Editable.Button.Background.GradientStop2.Color}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="{StaticResource Button.Background.Color}"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource ComboBox.Pressed.Background.GradientStop1.Color}" Offset="0.0"/>
        <GradientStop Color="{StaticResource ComboBox.Pressed.Background.GradientStop2.Color}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="{StaticResource Button.Background.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="{StaticResource Button.Background.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="{StaticResource Button.Background.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="{StaticResource Button.Background.Color}"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource ComboBox.Pressed.Editable.Button.Background.GradientStop1.Color}" Offset="0.0"/>
        <GradientStop Color="{StaticResource ComboBox.Pressed.Editable.Button.Background.GradientStop2.Color}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="{StaticResource ComboBox.Pressed.Editable.Button.Border.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="{StaticResource ComboBox.Disabled.Background.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="{StaticResource ComboBox.Disabled.Border.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="{StaticResource ComboBox.Disabled.Glyph.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="{StaticResource ComboBox.Disabled.Editable.Background.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="{StaticResource ComboBox.Disabled.Editable.Border.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="{StaticResource ComboBox.Disabled.Editable.Button.Background.Color}"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="{StaticResource ComboBox.Disabled.Editable.Button.Border.Color}"/>
    <SolidColorBrush x:Key="CurrentEntryBackground" Color="{StaticResource CurrentEntryBackground.Color}" Opacity="0.25"/>
    <SolidColorBrush x:Key="DataGrid.Background" Color="{StaticResource DataGrid.Background.Color}"/>
    <SolidColorBrush x:Key="DataGrid.Border" Color="{StaticResource DataGrid.Border.Color}"/>
    <SolidColorBrush x:Key="DataGrid.Foreground" Color="{StaticResource DataGrid.Foreground.Color}"/>
    <SolidColorBrush x:Key="DataGrid.SelectAllButton.Arrow" Color="{StaticResource DataGrid.SelectAllButton.Arrow.Color}"/>
    <SolidColorBrush x:Key="DataGrid.SelectAllButton.Border" Color="{StaticResource DataGrid.SelectAllButton.Border.Color}"/>
    <SolidColorBrush x:Key="DataGrid.SelectAllButton.MouseOver.Border" Color="{StaticResource DataGrid.SelectAllButton.MouseOver.Border.Color}"/>
    <SolidColorBrush x:Key="DataGrid.SelectAllButton.Pressed.Arrow" Color="{StaticResource DataGrid.SelectAllButton.Pressed.Arrow.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Background" Color="{StaticResource DatePicker.Background.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Background.Pressed" Color="{StaticResource DatePicker.Background.Pressed.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.GradientStop1" Color="{StaticResource DatePicker.Border.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.GradientStop2" Color="{StaticResource DatePicker.Border.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.GradientStop3" Color="{StaticResource DatePicker.Border.GradientStop3.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.GradientStop4" Color="{StaticResource DatePicker.Border.GradientStop4.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.MouseOver.GradientStop2" Color="{StaticResource DatePicker.Border.MouseOver.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.MouseOver.GradientStop3" Color="{StaticResource DatePicker.Border.MouseOver.GradientStop3.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.MouseOver.GradientStop4" Color="{StaticResource DatePicker.Border.MouseOver.GradientStop4.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.Pressed.GradientStop1" Color="{StaticResource DatePicker.Border.Pressed.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.Pressed.GradientStop2" Color="{StaticResource DatePicker.Border.Pressed.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.Pressed.GradientStop3" Color="{StaticResource DatePicker.Border.Pressed.GradientStop3.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Border.Pressed.GradientStop4" Color="{StaticResource DatePicker.Border.Pressed.GradientStop4.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Foreground" Color="{StaticResource DatePicker.Foreground.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Calendar.Border" Color="{StaticResource DatePicker.Calendar.Border.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Calendar.Circle.Background" Color="{StaticResource DatePicker.Calendar.Circle.Background.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Calendar.Disabled.Border" Color="{StaticResource DatePicker.Calendar.Disabled.Border.Color}"/>
    <!--<SolidColorBrush x:Key="DatePicker.Root.Disabled" Color="{StaticResource DatePicker.Root.Disabled.Color}"/>-->
    <SolidColorBrush x:Key="DatePicker.Inner.Background" Color="{StaticResource DatePicker.Inner.Background.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Background.GradientStop1" Color="{StaticResource DatePicker.Inner.Background.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Background.GradientStop2" Color="{StaticResource DatePicker.Inner.Background.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Background.GradientStop3" Color="{StaticResource DatePicker.Inner.Background.GradientStop3.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Background.GradientStop4" Color="{StaticResource DatePicker.Inner.Background.GradientStop4.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Background.Gradient.Border" Color="{StaticResource DatePicker.Inner.Background.Gradient.Border.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Highlight" Color="{StaticResource DatePicker.Inner.Highlight.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Inner.Background" Color="{StaticResource DatePicker.Inner.Inner.Background.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Inner.Border" Color="{StaticResource DatePicker.Inner.Inner.Border.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Rectangle.Background.GradientStop1" Color="{StaticResource DatePicker.Inner.Rectangle.Background.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Rectangle.Background.GradientStop2" Color="{StaticResource DatePicker.Inner.Rectangle.Background.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Rectangle.Border.GradientStop1" Color="{StaticResource DatePicker.Inner.Rectangle.Border.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Inner.Rectangle.Border.GradientStop2" Color="{StaticResource DatePicker.Inner.Rectangle.Border.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="DatePicker.Popup.Background" Color="{StaticResource DatePicker.Popup.Background.Color}"/>
    <SolidColorBrush x:Key="DocumentViewer.Background" Color="{StaticResource DocumentViewer.Background.Color}"/>
    <SolidColorBrush x:Key="DocumentViewer.Foreground" Color="{StaticResource DocumentViewer.Foreground.Color}"/>
    <SolidColorBrush x:Key="DocumentViewer.Rectangle.Background.GradientStop1" Color="{StaticResource DocumentViewer.Rectangle.Background.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="DocumentViewer.Rectangle.Background.GradientStop2" Color="{StaticResource DocumentViewer.Rectangle.Background.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="Expander.Background" Color="{StaticResource Expander.Background.Color}"/>
    <SolidColorBrush x:Key="Expander.Border" Color="{StaticResource Expander.Border.Color}"/>
    <SolidColorBrush x:Key="Expander.Disabled.Foreground" Color="{StaticResource Expander.Disabled.Foreground.Color}"/>
    <SolidColorBrush x:Key="Expander.Foreground" Color="{StaticResource Expander.Foreground.Color}"/>
    <SolidColorBrush x:Key="Expander.Circle.Stroke" Color="{StaticResource Expander.Circle.Stroke.Color}"/>
    <SolidColorBrush x:Key="Expander.Circle.Fill" Color="{StaticResource Expander.Circle.Fill.Color}"/>
    <SolidColorBrush x:Key="Expander.Arrow.Stroke" Color="{StaticResource Expander.Arrow.Stroke.Color}"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="{StaticResource Expander.MouseOver.Circle.Stroke.Color}"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="{StaticResource Expander.MouseOver.Circle.Fill.Color}"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="{StaticResource Expander.MouseOver.Arrow.Stroke.Color}"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="{StaticResource Expander.Pressed.Circle.Stroke.Color}"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="{StaticResource Expander.Pressed.Circle.Fill.Color}"/>
    <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="{StaticResource Expander.Pressed.Arrow.Stroke.Color}"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="{StaticResource Expander.Disabled.Circle.Stroke.Color}"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="{StaticResource Expander.Disabled.Circle.Fill.Color}"/>
    <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="{StaticResource Expander.Disabled.Arrow.Stroke.Color}"/>
    <SolidColorBrush x:Key="FocusVisual.Stroke" Color="{StaticResource FocusVisual.Stroke.Color}"/>
    <SolidColorBrush x:Key="FrameNavChrome.Path.Fill.GradientStop1" Color="{StaticResource FrameNavChrome.Path.Fill.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="FrameNavChrome.Path.Fill.GradientStop2" Color="{StaticResource FrameNavChrome.Path.Fill.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="FrameNavChrome.Stroke.Fill.GradientStop1" Color="{StaticResource FrameNavChrome.Path.Stroke.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="FrameNavChrome.Stroke.Fill.GradientStop2" Color="{StaticResource FrameNavChrome.Path.Stroke.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="GridSplitter.Background" Color="{StaticResource GridSplitter.Background.Color}"/>
    <SolidColorBrush x:Key="GridSplitter.PreviewStyle.Background" Color="{StaticResource GridSplitter.PreviewStyle.Background.Color}"/>
    <SolidColorBrush x:Key="GroupBox.Border" Color="{StaticResource GroupBox.Border.Color}"/>
    <SolidColorBrush x:Key="GroupBox.Inner.Border" Color="{StaticResource GroupBox.Inner.Border.Color}"/>
    <SolidColorBrush x:Key="GroupBox.Inner.Inner.Border" Color="{StaticResource GroupBox.Inner.Inner.Border.Color}"/>
    <SolidColorBrush x:Key="GroupBox.Inner.Inner.Inner.Border" Color="{StaticResource GroupBox.Inner.Inner.Inner.Border.Color}"/>
    <SolidColorBrush x:Key="Label.Background" Color="{StaticResource Label.Background.Color}"/>
    <SolidColorBrush x:Key="Label.Foreground" Color="{StaticResource Label.Foreground.Color}"/>
    <SolidColorBrush x:Key="Label.Disabled.Foreground" Color="{StaticResource Label.Disabled.Foreground.Color}"/>    
    <SolidColorBrush x:Key="ListBox.Background" Color="{StaticResource ListBox.Background.Color}"/>
    <SolidColorBrush x:Key="ListBox.Border" Color="{StaticResource ListBox.Border.Color}"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="{StaticResource ListBox.Disabled.Background.Color}"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="{StaticResource ListBox.Disabled.Border.Color}"/>
    <SolidColorBrush x:Key="ListBox.Foreground" Color="{StaticResource ListBox.Foreground.Color}"/>
    <SolidColorBrush x:Key="Menu.Background" Color="{StaticResource Menu.Background.Color}"/>
    <SolidColorBrush x:Key="Menu.Foreground" Color="{StaticResource Menu.Foreground.Color}"/>
    <SolidColorBrush x:Key="MenuScrollButton.Background" Color="{StaticResource MenuScrollButton.Background.Color}"/>
    <SolidColorBrush x:Key="MenuScrollButton.Border" Color="{StaticResource MenuScrollButton.Border.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowNavigationButton.Background" Color="{StaticResource NavigationWindowNavigationButton.Background.Color}"/>
    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillEnabled" EndPoint="0.5,1.0" StartPoint="0.5,0.0">
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillEnabled.GradientStop1.Color}" Offset="0.0"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillEnabled.GradientStop2.Color}" Offset="0.1"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillEnabled.GradientStop3.Color}" Offset="0.47"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillEnabled.GradientStop4.Color}" Offset="0.47"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillEnabled.GradientStop5.Color}" Offset="0.70"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillEnabled.GradientStop6.Color}" Offset="0.85"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillEnabled.GradientStop7.Color}" Offset="0.95"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillEnabled.GradientStop8.Color}" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillHover" EndPoint="0.5,1.0" StartPoint="0.5,0.0">
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillHover.GradientStop1.Color}" Offset="0.0"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillHover.GradientStop2.Color}" Offset="0.1"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillHover.GradientStop3.Color}" Offset="0.47"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillHover.GradientStop4.Color}" Offset="0.47"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillHover.GradientStop5.Color}" Offset="0.70"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillHover.GradientStop6.Color}" Offset="0.85"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillHover.GradientStop7.Color}" Offset="0.95"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillHover.GradientStop8.Color}" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillPressed" EndPoint="0.5,1.0" StartPoint="0.5,0.0">
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillPressed.GradientStop1.Color}" Offset="0.0"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillPressed.GradientStop2.Color}" Offset="0.47"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillPressed.GradientStop3.Color}" Offset="0.47"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillPressed.GradientStop4.Color}" Offset="0.70"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillPressed.GradientStop5.Color}" Offset="0.85"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillPressed.GradientStop6.Color}" Offset="0.95"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillPressed.GradientStop7.Color}" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillDisabled" EndPoint="0.5,1.0" StartPoint="0.5,0.0">
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillDisabled.GradientStop1.Color}" Offset="0"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillDisabled.GradientStop2.Color}" Offset="0.5"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillDisabled.GradientStop3.Color}" Offset="0.5"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonFillDisabled.GradientStop4.Color}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NavigationWindowNavigationButtonFillDisabled.Background" Color="{StaticResource NavigationWindowNavigationButtonFillDisabled.Background.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowNavigationButtonFillDisabled.Border" Color="{StaticResource NavigationWindowNavigationButtonFillDisabled.Border.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowNavigationButtonFillDisabled.Border2" Color="{StaticResource NavigationWindowNavigationButtonFillDisabled.Border2.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Background" Color="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Background.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Background" Color="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Background.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Foreground" Color="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Foreground.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Backward.Foreground" Color="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Backward.Foreground.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Forward.Foreground" Color="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Forward.Foreground.Color}"/>
    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonStrokeEnabled" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonStrokeEnabled.GradientStop1.Color}" Offset="0"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonStrokeEnabled.GradientStop2.Color}" Offset="0.5"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonStrokeEnabled.GradientStop3.Color}" Offset="0.5"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationButtonStrokeEnabled.GradientStop4.Color}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowStrokeEnabled" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource NavigationWindowNavigationArrowStrokeEnabled.GradientStop1.Color}" Offset="0"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationArrowStrokeEnabled.GradientStop2.Color}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource NavigationWindowNavigationArrowFill.GradientStop1.Color}" Offset="0.5"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationArrowFill.GradientStop2.Color}" Offset="0.5"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationArrowFill.GradientStop3.Color}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavigationWindowDownArrowFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource NavigationWindowDownArrowFill.GradientStop1.Color}" Offset="0"/>
        <GradientStop Color="{StaticResource NavigationWindowDownArrowFill.GradientStop2.Color}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NavigationWindowDownArrowFill.Border" Color="{StaticResource NavigationWindowDownArrowFill.Border.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowDownArrowFill.DropShadow" Color="{StaticResource NavigationWindowDownArrowFill.DropShadow.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowDownArrowFill.Enabled" Color="{StaticResource NavigationWindowDownArrowFill.Enabled.Color}"/>
    <LinearGradientBrush x:Key="NavigationWindowNavigationChromeBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource NavigationWindowNavigationChromeBackground.GradientStop1.Color}" Offset="0"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationChromeBackground.GradientStop2.Color}" Offset="0.5"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationChromeBackground.GradientStop3.Color}" Offset="0.5"/>
        <GradientStop Color="{StaticResource NavigationWindowNavigationChromeBackground.GradientStop4.Color}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NavigationWindowMenuItem.Panel.Background" Color="{StaticResource NavigationWindowMenuItem.Panel.Background.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowMenuItem.Panel.Highlight.Background.GradientStop1" Color="{StaticResource NavigationWindowMenuItem.Panel.Highlight.Background.GradientStop1.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowMenuItem.Panel.Highlight.Background.GradientStop2" Color="{StaticResource NavigationWindowMenuItem.Panel.Highlight.Background.GradientStop2.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowMenuItem.Panel.Highlight.Border" Color="{StaticResource NavigationWindowMenuItem.Panel.Highlight.Border.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowMenuItem.Panel.Highlight.Inner.Border" Color="{StaticResource NavigationWindowMenuItem.Panel.Highlight.Inner.Border.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowMenuItem.SubMenu.Background" Color="{StaticResource NavigationWindowMenuItem.SubMenu.Background.Color}"/>
    <SolidColorBrush x:Key="NavigationWindowMenuItem.SubMenu.Border" Color="{StaticResource NavigationWindowMenuItem.SubMenu.Border.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Background" Color="{StaticResource OptionMark.Background.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Border" Color="{StaticResource OptionMark.Border.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Foreground" Color="{StaticResource OptionMark.Foreground.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Glyph" Color="{StaticResource OptionMark.Glyph.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Root.Background" Color="{StaticResource OptionMark.Root.Background.Color}"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="{StaticResource OptionMark.MouseOver.Background.Color}"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="{StaticResource OptionMark.MouseOver.Border.Color}"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="{StaticResource OptionMark.MouseOver.Glyph.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="{StaticResource OptionMark.Pressed.Background.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="{StaticResource OptionMark.Pressed.Border.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="{StaticResource OptionMark.Pressed.Glyph.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="{StaticResource OptionMark.Disabled.Background.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="{StaticResource OptionMark.Disabled.Border.Color}"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="{StaticResource OptionMark.Disabled.Glyph.Color}"/>    
    <SolidColorBrush x:Key="ProgressBar.Progress" Color="{StaticResource ProgressBar.Progress.Color}"/>
    <SolidColorBrush x:Key="ProgressBar.Background" Color="{StaticResource ProgressBar.Background.Color}"/>
    <SolidColorBrush x:Key="ProgressBar.Border" Color="{StaticResource ProgressBar.Border.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Background" Color="{StaticResource RadioButton.Background.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Border" Color="{StaticResource RadioButton.Border.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Foreground" Color="{StaticResource RadioButton.Foreground.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Glyph" Color="{StaticResource RadioButton.Glyph.Color}"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="{StaticResource RadioButton.MouseOver.Background.Color}"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="{StaticResource RadioButton.MouseOver.Border.Color}"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="{StaticResource RadioButton.MouseOver.Glyph.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="{StaticResource RadioButton.Pressed.Background.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="{StaticResource RadioButton.Pressed.Border.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="{StaticResource RadioButton.Pressed.Glyph.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Root.Background" Color="{StaticResource RadioButton.Root.Background.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="{StaticResource RadioButton.Disabled.Background.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="{StaticResource RadioButton.Disabled.Border.Color}"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="{StaticResource RadioButton.Disabled.Glyph.Color}"/>
    <SolidColorBrush x:Key="RepeatButton.Transparent.Background" Color="{StaticResource RepeatButton.Transparent.Background.Color}"/>
    <SolidColorBrush x:Key="RichTextBox.Hyperlink.Disabled.Foreground" Color="{StaticResource RichTextBox.Hyperlink.Disabled.Foreground.Color}"/>
    <SolidColorBrush x:Key="RichTextBox.Hyperlink.Foreground" Color="{StaticResource RichTextBox.Hyperlink.Foreground.Color}"/>
    <SolidColorBrush x:Key="ScrollBarButton.Background" Color="{StaticResource ScrollBarButton.Background.Color}"/>
    <SolidColorBrush x:Key="ScrollBarButton.Border" Color="{StaticResource ScrollBarButton.Border.Color}"/>
    <SolidColorBrush x:Key="ScrollBarButton.MouseOver.Background" Color="{StaticResource ScrollBarButton.MouseOver.Background.Color}"/>
    <SolidColorBrush x:Key="ScrollBarButton.MouseOver.Border" Color="{StaticResource ScrollBarButton.MouseOver.Border.Color}"/>
    <SolidColorBrush x:Key="ScrollBarButton.Pressed.Background" Color="{StaticResource ScrollBarButton.Pressed.Background.Color}"/>
    <SolidColorBrush x:Key="ScrollBarButton.Pressed.Border" Color="{StaticResource ScrollBarButton.Pressed.Border.Color}"/>
    <SolidColorBrush x:Key="ScrollBarButton.Disabled.Background" Color="{StaticResource ScrollBarButton.Disabled.Background.Color}"/>
    <SolidColorBrush x:Key="ScrollBarButton.Disabled.Border" Color="{StaticResource ScrollBarButton.Disabled.Border.Color}"/>
    <SolidColorBrush x:Key="ScrollBar.Foreground" Color="{StaticResource ScrollBar.Foreground.Color}"/>
    <SolidColorBrush x:Key="ScrollBar.Glyph" Color="{StaticResource ScrollBar.Glyph.Color}"/>
    <SolidColorBrush x:Key="ScrollBar.Thumb" Color="{StaticResource ScrollBar.Thumb.Color}"/>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="{StaticResource ScrollBar.MouseOver.Glyph.Color}"/>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="{StaticResource ScrollBar.MouseOver.Thumb.Color}"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="{StaticResource ScrollBar.Pressed.Thumb.Color}"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="{StaticResource ScrollBar.Pressed.Glyph.Color}"/>
    <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="{StaticResource ScrollBar.Disabled.Glyph.Color}"/>
    <SolidColorBrush x:Key="Separator.Background" Color="{StaticResource Separator.Background.Color}"/>
    <SolidColorBrush x:Key="Slider.Background" Color="{StaticResource Slider.Background.Color}"/>
    <SolidColorBrush x:Key="Slider.Border" Color="{StaticResource Slider.Border.Color}"/>
    <SolidColorBrush x:Key="Slider.SelectionRange.Background" Color="{StaticResource Slider.SelectionRange.Background.Color}"/>
    <SolidColorBrush x:Key="Slider.IsKeyboardfocused.Foreground" Color="{StaticResource Slider.IsKeyboardfocused.Foreground.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.Background" Color="{StaticResource SliderThumb.Background.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.Border" Color="{StaticResource SliderThumb.Border.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.Foreground" Color="{StaticResource SliderThumb.Foreground.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="{StaticResource SliderThumb.MouseOver.Background.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="{StaticResource SliderThumb.MouseOver.Border.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="{StaticResource SliderThumb.Pressed.Background.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="{StaticResource SliderThumb.Pressed.Border.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="{StaticResource SliderThumb.Disabled.Background.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="{StaticResource SliderThumb.Disabled.Border.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="{StaticResource SliderThumb.Track.Background.Color}"/>
    <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="{StaticResource SliderThumb.Track.Border.Color}"/>
    <SolidColorBrush x:Key="StatusBar.Background" Color="{StaticResource StatusBar.Background.Color}"/>
    <SolidColorBrush x:Key="StatusBar.Foreground" Color="{StaticResource StatusBar.Foreground.Color}"/>
    <SolidColorBrush x:Key="TabControl.Disabled.Foreground" Color="{StaticResource TabControl.Disabled.Foreground.Color}"/>
    <SolidColorBrush x:Key="TabControl.Foreground" Color="{StaticResource TabControl.Foreground.Color}"/>
    <SolidColorBrush x:Key="TabControl.TabPanel.Background" Color="{StaticResource TabControl.TabPanel.Background.Color}"/>
    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="{StaticResource TabItem.Selected.Background.Color}"/>
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="{StaticResource TabItem.Selected.Border.Color}"/>
    <SolidColorBrush x:Key="TextBoxBase.Background" Color="{StaticResource TextBoxBase.Background.Color}"/>
    <SolidColorBrush x:Key="TextBoxBase.Foreground" Color="{StaticResource TextBoxBase.Foreground.Color}"/>
    <SolidColorBrush x:Key="TextBoxBase.InactiveSelection" Color="{StaticResource TextBoxBase.InactiveSelection.Color}"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="{StaticResource TextBox.Focus.Border.Color}"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="{StaticResource TextBox.MouseOver.Border.Color}"/>
    <SolidColorBrush x:Key="TextBox.Background" Color="{StaticResource TextBox.Background.Color}"/>
    <SolidColorBrush x:Key="TextBox.Border" Color="{StaticResource TextBox.Border.Color}"/>
    <SolidColorBrush x:Key="TextBox.ContentHost.Background" Color="{StaticResource TextBox.ContentHost.Background.Color}"/>
    <SolidColorBrush x:Key="ToolBarButtonHover" Color="{StaticResource ToolBarButtonHover.Color}"/>
    <SolidColorBrush x:Key="ToolBarMenuBorder" Color="{StaticResource ToolBarMenuBorder.Color}"/>
    <SolidColorBrush x:Key="ToolBarHorizontalOverflow.Background.HighContrast" Color="{StaticResource ToolBarHorizontalOverflow.Background.HighContrast.Color}"/>
    <SolidColorBrush x:Key="ToolBarHorizontalOverflow.Path.Border" Color="{StaticResource ToolBarHorizontalOverflow.Path.Border.Color}"/>
    <SolidColorBrush x:Key="ToolBarVerticalOverflow.Background.HighContrast" Color="{StaticResource ToolBarVerticalOverflow.Background.HighContrast.Color}"/>
    <SolidColorBrush x:Key="ToolBarVerticalOverflow.Path.Border" Color="{StaticResource ToolBarVerticalOverflow.Path.Border.Color}"/>
    <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="{StaticResource ToolBarSubMenuBackground.Color}"/>
    <SolidColorBrush x:Key="ToolBarHorizontalBackground" Color="{StaticResource ToolBarHorizontalBackground.Color}"/>
    <SolidColorBrush x:Key="ToolBarVerticalBackground" Color="{StaticResource ToolBarVerticalBackground.Color}"/>
    <SolidColorBrush x:Key="ToolBarGripper" Color="{StaticResource ToolBarGripper.Color}"/>
    <SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground" Color="{StaticResource ToolBarToggleButtonHorizontalBackground.Color}"/>
    <SolidColorBrush x:Key="ToolBarToggleButtonVerticalBackground" Color="{StaticResource ToolBarToggleButtonVerticalBackground.Color}"/>
    <SolidColorBrush x:Key="ToolBar.Thumb.Background" Color="{StaticResource ToolBar.Thumb.Background.Color}"/>
    <SolidColorBrush x:Key="ToolBar.Thumb.GeometryDrawing" Color="{StaticResource ToolBar.Thumb.GeometryDrawing.Color}"/>
    <SolidColorBrush x:Key="ToolBar.Disabled.Foreground" Color="{StaticResource ToolBar.Disabled.Foreground.Color}"/>
    <SolidColorBrush x:Key="ToolBar.DropShadow" Color="{StaticResource ToolBar.DropShadow.Color}"/>
    <SolidColorBrush x:Key="ToolBar.HighContrast.Background" Color="{StaticResource ToolBar.HighContrast.Background.Color}"/>
    <SolidColorBrush x:Key="TreeView.Background" Color="{StaticResource TreeView.Background.Color}"/>
    <SolidColorBrush x:Key="TreeView.Border" Color="{StaticResource TreeView.Border.Color}"/>
    <SolidColorBrush x:Key="TreeView.Foreground" Color="{StaticResource TreeView.Foreground.Color}"/>








    
    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                   Converters                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverter"/>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                   Geometries                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Geometry x:Key="DownArrow">M 0,2 L 3.5,5.5 L 7,2 Z</Geometry>
    <Geometry x:Key="LeftArrow">M 0,3.5 L 3.5,0 L 3.5,7 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 0,7 L 3.5,3.5 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,5.5 L 3.5,2 L 7,5.5 Z</Geometry>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                      Paths                                                                  |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Path x:Key="PathDownArrow" Margin="0,0,0,0" Stroke="{StaticResource ArrowPath.Background}" Fill="{StaticResource ArrowPath.Border}" Data="M 0,2 L 3.5,5.5 L 7,2 Z" SnapsToDevicePixels="True" />
    <Path x:Key="PathLeftArrow" Margin="10,0,0,0" Stroke="{StaticResource ArrowPath.Background}" Fill="{StaticResource ArrowPath.Border}" Data="M 0,3.5 L 3.5,0 L 3.5,7 Z" SnapsToDevicePixels="True" />
    <Path x:Key="PathRightArrow" Margin="20,0,0,0" Stroke="{StaticResource ArrowPath.Background}" Fill="{StaticResource ArrowPath.Border}" Data="M 0,0 L 0,7 L 3.5,3.5 Z" SnapsToDevicePixels="True" />
    <Path x:Key="PathUpArrow" Margin="30,0,0,0" Stroke="{StaticResource ArrowPath.Background}" Fill="{StaticResource ArrowPath.Border}" Data="M 0,5.5 L 3.5,2 L 7,5.5 Z" SnapsToDevicePixels="True" />







    
    
    
    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                  Focus Visuals                                                              |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{StaticResource FocusVisual.Stroke}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{StaticResource FocusVisual.Stroke}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" StrokeDashArray="1 2" Stroke="{StaticResource FocusVisual.Stroke}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                       Menus                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightMenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource Menu.Background}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground" Value="{StaticResource Menu.Foreground}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationWindowMenu" TargetType="{x:Type Menu}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="IsMainMenu" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                    MenuItems                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="NavigationWindowNavigationButtonJournalEntryStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Header" Value="{Binding (JournalEntry.Name)}"/>
        <Setter Property="Command" Value="NavigationCommands.NavigateJournal"/>
        <Setter Property="CommandTarget" Value="{Binding TemplatedParent, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}"/>
        <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid x:Name="Panel" Background="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Background}" SnapsToDevicePixels="true">
                        <Path x:Name="Glyph" HorizontalAlignment="Left" Height="10" Margin="7,5" Stroke="{TemplateBinding Foreground}" 
                              StrokeStartLineCap="Triangle" SnapsToDevicePixels="false" StrokeThickness="2" StrokeEndLineCap="Triangle" Width="10"/>
                        <ContentPresenter ContentSource="Header" Margin="24,5,21,5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Current">
                            <Setter Property="Background" TargetName="Panel" Value="{StaticResource CurrentEntryBackground}"/>
                            <Setter Property="Data" TargetName="Glyph" Value="M 0,5 L 2.5,8 L 7,3 "/>
                            <Setter Property="FlowDirection" TargetName="Glyph" Value="LeftToRight"/>
                            <Setter Property="StrokeLineJoin" TargetName="Glyph" Value="Miter"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Foreground}"/>
                            <Setter Property="Background" TargetName="Panel" Value="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Background}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Forward"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="Glyph" Value="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Forward.Foreground}"/>
                            <Setter Property="Data" TargetName="Glyph" Value="M 1,5 L 7,5 M 5,1 L 9,5 L 5,9"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Back"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="Glyph" Value="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle.MenuItem.Highlight.Backward.Foreground}"/>
                            <Setter Property="Data" TargetName="Glyph" Value="M 9,5 L 3,5 M 5,1 L 1,5 L 5,9"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationWindowMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" Placement="Bottom" VerticalOffset="2"
                               IsOpen="{Binding (MenuItem.IsSubmenuOpen), RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <!--<theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                <Border x:Name="SubMenuBorder" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" 
                                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="1">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" 
                                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2" KeyboardNavigation.TabNavigation="Cycle"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>-->
                            <Border x:Name="SubMenuBorder" BorderThickness="1"
                                    Background="{StaticResource NavigationWindowMenuItem.SubMenu.Background}" 
                                    BorderBrush="{StaticResource NavigationWindowMenuItem.SubMenu.Border}">
                                <Border.Effect>
                                    <DropShadowEffect x:Name="Shdw" BlurRadius="3" Color="{StaticResource NavigationWindowDownArrowFill.DropShadow.Color}" ShadowDepth="5" />
                                </Border.Effect>
                                <ScrollViewer x:Name="SubMenuScrollViewer" 
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <Grid x:Name="Panel" Background="{StaticResource NavigationWindowMenuItem.Panel.Background}" HorizontalAlignment="Right" Width="26">
                            <Border x:Name="HighlightBorder" BorderBrush="{StaticResource NavigationWindowMenuItem.Panel.Highlight.Border}" 
                                    BorderThickness="1,1,1,1" CornerRadius="2" SnapsToDevicePixels="True" Visibility="Hidden">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="{StaticResource NavigationWindowMenuItem.Panel.Highlight.Background.GradientStop1.Color}" Offset="0"/>
                                        <GradientStop Color="{StaticResource NavigationWindowMenuItem.Panel.Highlight.Background.GradientStop1.Color}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="{StaticResource NavigationWindowMenuItem.Panel.Highlight.Inner.Border}" BorderThickness="1" CornerRadius="1.5"/>
                            </Border>
                            <Path x:Name="Arrow" Data="M 0 0 L 4.5 5 L 9 0 Z" Fill="{StaticResource NavigationWindowDownArrowFill}" HorizontalAlignment="Right" 
                                  Margin="{TemplateBinding Padding}" Stroke="{StaticResource NavigationWindowDownArrowFill.Border}" 
                                  SnapsToDevicePixels="false" StrokeThickness="1" StrokeLineJoin="Round" VerticalAlignment="Center"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Visibility" TargetName="HighlightBorder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource NavigationWindowDownArrowFill.Enabled}"/>
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <!--<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>-->
                            <!--<Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>-->
                            <!--<Setter Property="Color" TargetName="Shdw" Value="{StaticResource NavigationWindowDownArrowFill.DropShadow.Color}"/>-->
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                     Borders                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,11,0"/>
        <Setter Property="CornerRadius" Value="3,3,3,3"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="True">
                <Setter Property="CornerRadius" Value="0,0,0,0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                     Buttons                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource Button.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.IsDefault.Border}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" Fill="{StaticResource DataGrid.SelectAllButton.Border}" SnapsToDevicePixels="True"/>
                        <Polygon x:Name="Arrow" Fill="{StaticResource DataGrid.SelectAllButton.Arrow}" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" 
                                 Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border" Value="{StaticResource DataGrid.SelectAllButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border" Value="{StaticResource DataGrid.SelectAllButton.Pressed.Arrow}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationWindowBackButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Command" Value="NavigationCommands.BrowseBack"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{StaticResource NavigationWindowNavigationButton.Background}" Height="24" Width="24">
                        <Ellipse x:Name="Circle" Fill="{StaticResource NavigationWindowNavigationButtonFillEnabled}" 
                                 Stroke="{StaticResource NavigationWindowNavigationButtonStrokeEnabled}" StrokeThickness="1"/>
                        <Path x:Name="Arrow" Data="M0.37,7.69 L5.74,14.20 A1.5,1.5,0,1,0,10.26,12.27 L8.42,10.42 14.90,10.39 A1.5,1.5,0,1,0,14.92,5.87 L8.44,5.90 10.31,4.03 A1.5,1.5,0,1,0,5.79,1.77 Z" 
                              Fill="{StaticResource NavigationWindowNavigationArrowFill}" HorizontalAlignment="Center" Stroke="{StaticResource NavigationWindowNavigationArrowStrokeEnabled}" 
                              StrokeThickness="0.75" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled}"/>
                            <Setter Property="Stroke" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled.Border}"/>
                            <Setter Property="Stroke" TargetName="Arrow" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled.Border2}"/>
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled.Background}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationWindowForwardButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Command" Value="NavigationCommands.BrowseForward"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{StaticResource NavigationWindowNavigationButton.Background}" Height="24" Width="24">
                        <Ellipse x:Name="Circle" Grid.Column="0" Fill="{StaticResource NavigationWindowNavigationButtonFillEnabled}" 
                                 Stroke="{StaticResource NavigationWindowNavigationButtonStrokeEnabled}" StrokeThickness="1"/>
                        <Path x:Name="Arrow" Grid.Column="0" Data="M0.37,7.69 L5.74,14.20 A1.5,1.5,0,1,0,10.26,12.27 L8.42,10.42 14.90,10.39 A1.5,1.5,0,1,0,14.92,5.87 L8.44,5.90 10.31,4.03 A1.5,1.5,0,1,0,5.79,1.77 Z" 
                              Fill="{StaticResource NavigationWindowNavigationArrowFill}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0" Stroke="{StaticResource NavigationWindowNavigationArrowStrokeEnabled}" 
                              StrokeThickness="0.75" VerticalAlignment="Center">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled}"/>
                            <Setter Property="Stroke" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled.Border}"/>
                            <Setter Property="Stroke" TargetName="Arrow" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled.Border2}"/>
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled.Background}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="Circle" Value="{StaticResource NavigationWindowNavigationButtonFillPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                      Frames                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <ControlTemplate x:Key="FrameNavChromeTemplateKey" TargetType="{x:Type Frame}">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                Padding="{TemplateBinding Padding}">
            <DockPanel>
                <Grid Background="{StaticResource NavigationWindowNavigationChromeBackground}" DockPanel.Dock="Top" Height="22">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Menu x:Name="NavMenu" Grid.ColumnSpan="3" Height="16" Margin="1,0,0,0" Style="{StaticResource NavigationWindowMenu}" VerticalAlignment="Center">
                        <MenuItem Padding="0,2,4,0" ItemContainerStyle="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle}" 
                                  IsSubmenuOpen="{Binding (MenuItem.IsSubmenuOpen), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                  Style="{StaticResource NavigationWindowMenuItem}">
                            <MenuItem.ItemsSource>
                                <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                                    <Binding Path="BackStack" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ForwardStack" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </MenuItem.ItemsSource>
                        </MenuItem>
                    </Menu>
                    <Path Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Left" IsHitTestVisible="false" Margin="2,0,0,0" SnapsToDevicePixels="false" StrokeThickness="1" VerticalAlignment="Center"
                          Data="M22.5767,21.035 Q27,19.37 31.424,21.035 A12.5,12.5,0,0,0,53.5,13 A12.5,12.5,0,0,0,37.765,0.926 Q27,4.93 16.235,0.926 A12.5,12.5,0,0,0,0.5,13 A12.5,12.5,0,0,0,22.5767,21.035 Z">
                        <Path.Fill>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource FrameNavChrome.Path.Fill.GradientStop1.Color}" Offset="0"/>
                                        <GradientStop Color="{StaticResource FrameNavChrome.Path.Fill.GradientStop2.Color}" Offset="1"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Fill>
                        <Path.LayoutTransform>
                            <ScaleTransform ScaleX="0.667" ScaleY="0.667"/>
                        </Path.LayoutTransform>
                        <Path.Stroke>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource FrameNavChrome.Path.Stroke.GradientStop1.Color}" Offset="0.2"/>
                                        <GradientStop Color="{StaticResource FrameNavChrome.Path.Stroke.GradientStop2.Color}" Offset="0.9"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Stroke>
                    </Path>
                    <Button Grid.Column="0" Margin="3,0,1,0" Style="{StaticResource NavigationWindowBackButtonStyle}">
                        <Button.LayoutTransform>
                            <ScaleTransform ScaleX="0.667" ScaleY="0.667"/>
                        </Button.LayoutTransform>
                    </Button>
                    <Button Grid.Column="1" Margin="1,0,0,0" Style="{StaticResource NavigationWindowForwardButtonStyle}">
                        <Button.LayoutTransform>
                            <ScaleTransform ScaleX="0.667" ScaleY="0.667"/>
                        </Button.LayoutTransform>
                    </Button>
                </Grid>
                <ContentPresenter x:Name="PART_FrameCP"/>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CanGoForward" Value="false"/>
                    <Condition Property="CanGoBack" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="IsEnabled" TargetName="NavMenu" Value="false"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LightFrameStyle" TargetType="{x:Type Frame}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Frame}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="PART_FrameCP"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="NavigationUIVisibility" Value="Visible">
                <Setter Property="Template" Value="{StaticResource FrameNavChromeTemplateKey}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="JournalOwnership" Value="OwnsJournal"/>
                    <Condition Property="NavigationUIVisibility" Value="Automatic"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource FrameNavChromeTemplateKey}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                      Thumbs                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{StaticResource ToolBar.Thumb.Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush TileMode="Tile" ViewboxUnits="Absolute" Viewbox="0,0,4,4" ViewportUnits="Absolute" Viewport="0,0,4,4">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{StaticResource ToolBar.Thumb.GeometryDrawing}" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 Z"/>
                                            <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 Z"/>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 Z" 
                  Fill="{StaticResource SliderThumb.Background}" Stroke="{StaticResource SliderThumb.Border}" 
                  SnapsToDevicePixels="True" Stretch="Fill" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 Z" 
                  Fill="{StaticResource SliderThumb.Background}" Stroke="{StaticResource SliderThumb.Border}" 
                  SnapsToDevicePixels="True" Stretch="Fill" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 Z" 
                  Fill="{StaticResource SliderThumb.Background}" Stroke="{StaticResource SliderThumb.Border}" 
                  SnapsToDevicePixels="True" Stretch="Fill" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                <Border x:Name="TrackBackground" Background="{StaticResource SliderThumb.Track.Background}" BorderBrush="{StaticResource SliderThumb.Track.Border}" 
                        BorderThickness="1" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource Slider.SelectionRange.Background}" Height="4.0" Visibility="Hidden"/>
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent1}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent1}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}"
                               VerticalAlignment="Center" Width="11"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="{StaticResource Slider.IsKeyboardfocused.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5 Z" Fill="{StaticResource SliderThumb.Background}" 
                  Stroke="{StaticResource SliderThumb.Border}" Stretch="Fill"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 Z" 
                  Fill="{StaticResource SliderThumb.Background}" Stroke="{StaticResource SliderThumb.Border}" Stretch="Fill"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 Z" 
                  Fill="{StaticResource SliderThumb.Background}" Stroke="{StaticResource SliderThumb.Border}" Stretch="Fill"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" 
                               SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" 
                               SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    









    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                     Calendars                                                               |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightCalendarStyle" TargetType="{x:Type Calendar}">
        <Setter Property="Foreground" Value="{StaticResource Calendar.Foreground}"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="{StaticResource Calendar.Background.GradientStop1.Color}" Offset="0"/>
                    <GradientStop Color="{StaticResource Calendar.Background.GradientStop2.Color}" Offset="0.16"/>
                    <GradientStop Color="{StaticResource Calendar.Background.GradientStop3.Color}" Offset="0.16"/>
                    <GradientStop Color="{StaticResource Calendar.Background.GradientStop4.Color}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="{StaticResource Calendar.Border.GradientStop1.Color}" Offset="0"/>
                    <GradientStop Color="{StaticResource Calendar.Border.GradientStop2.Color}" Offset="0.375"/>
                    <GradientStop Color="{StaticResource Calendar.Border.GradientStop3.Color}" Offset="0.375"/>
                    <GradientStop Color="{StaticResource Calendar.Border.GradientStop4.Color}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" Style="{TemplateBinding CalendarItemStyle}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                     CheckBoxes                                                              |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource OptionMark.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource OptionMark.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="{StaticResource OptionMark.Root.Background}" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z" 
                                      Fill="{StaticResource OptionMark.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Glyph}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                    ToggleButtons                                                            |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="true">
                        <Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="6">
                            <Path Data="M 1 1.5 L 6 1.5" Stroke="{StaticResource ToolBarHorizontalOverflow.Path.Border}"/>
                            <Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}"/>
                            <Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="{StaticResource ToolBarHorizontalOverflow.Path.Border}"/>
                            <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{StaticResource ToolBarHorizontalOverflow.Background.HighContrast}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="true">
                        <Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="7">
                            <Path Data="M 1.5 1 L 1.5 6" Stroke="{StaticResource ToolBarVerticalOverflow.Path.Border}"/>
                            <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
                            <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="{StaticResource ToolBarVerticalOverflow.Path.Border}"/>
                            <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{StaticResource ToolBarVerticalOverflow.Background.HighContrast}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle" Fill="{StaticResource Expander.Circle.Fill}" HorizontalAlignment="Center" Height="19" 
                                     Stroke="{StaticResource Expander.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                            <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
                                  Stroke="{StaticResource Expander.Arrow.Stroke}" SnapsToDevicePixels="false" StrokeThickness="2" 
                                  VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" 
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Circle.Fill}" HorizontalAlignment="Center" Height="19" 
                                         Stroke="{StaticResource Expander.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
                                      Stroke="{StaticResource Expander.Arrow.Stroke}" SnapsToDevicePixels="false" StrokeThickness="2" 
                                      VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" 
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Circle.Fill}" HorizontalAlignment="Center" Height="19" 
                                         Stroke="{StaticResource Expander.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
                                      Stroke="{StaticResource Expander.Arrow.Stroke}" SnapsToDevicePixels="false" StrokeThickness="2" 
                                      VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" RecognizesAccessKey="True" Grid.Row="1" SnapsToDevicePixels="True" 
                                              VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Circle.Fill}" HorizontalAlignment="Center" Height="19" 
                                         Stroke="{StaticResource Expander.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
                                      Stroke="{StaticResource Expander.Arrow.Stroke}" SnapsToDevicePixels="false" StrokeThickness="2" 
                                      VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" RecognizesAccessKey="True" Grid.Row="1" SnapsToDevicePixels="True" 
                                              VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Background}" 
                            BorderBrush="{StaticResource ComboBox.Border}" BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" 
                                SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
                                  Fill="{StaticResource ComboBox.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                    TextBoxBases                                                             |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Background" Value="{StaticResource TextBoxBase.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxBase.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource TextBoxBase.InactiveSelection}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                     TextBoxes                                                               |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="{StaticResource TextBox.ContentHost.Background}" 
                                  Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    









    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                     ComboBoxes                                                              |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Placement="Bottom"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <!--<theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" 
                                              MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="dropDownBorder" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" 
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>-->
                <Border x:Name="dropDownBorder" BorderThickness="1" Background="{StaticResource ComboBox.DropDown.Background}" 
                        BorderBrush="{StaticResource ComboBox.DropDown.Border}"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border.Effect>
                        <DropShadowEffect x:Name="shadow" BlurRadius="3" Color="{StaticResource ComboBox.DropShadow.Color}" ShadowDepth="5" />
                    </Border.Effect>
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" 
                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource ComboBoxToggleButton}"/>
            <Border x:Name="border" Background="{StaticResource TextBox.Background}" Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" 
                         Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ComboBox.Foreground}"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <!--<Setter Property="Color" TargetName="shadow" Value="{StaticResource ComboBox.DropShadow.MouseOver.Color}"/>-->
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="1" Placement="Bottom"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <!--<theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" 
                                              MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" 
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>-->
                <Border x:Name="dropDownBorder" Background="{StaticResource ComboBox.DropDown.Background}" 
                        BorderBrush="{StaticResource ComboBox.DropDown.Border}" BorderThickness="1"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border.Effect>
                        <DropShadowEffect x:Name="shadow" BlurRadius="3" Color="{StaticResource ComboBox.DropShadow.Color}" ShadowDepth="5" />
                    </Border.Effect>
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" 
                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" 
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <!--<Setter Property="Color" TargetName="shadow" Value="{StaticResource ComboBox.DropShadow.MouseOver.Color}"/>-->
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LightComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ComboBox.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource ComboBox.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                  ContentControls                                                            |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightContentControlStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                     DataGrids                                                               |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightDataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource DataGrid.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource DataGrid.Foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DataGrid.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" 
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" 
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" 
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                                Grid.ColumnSpan="2" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" 
                                                   Grid.Row="1" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                   ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" 
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" 
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                   DatePickers                                                               |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightDatePickerStyle" TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="{StaticResource DatePicker.Foreground}"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="{StaticResource DatePicker.Background}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="{StaticResource DatePicker.Border.GradientStop1.Color}" Offset="0"/>
                    <GradientStop Color="{StaticResource DatePicker.Border.GradientStop2.Color}" Offset="0.375"/>
                    <GradientStop Color="{StaticResource DatePicker.Border.GradientStop3.Color}" Offset="0.375"/>
                    <GradientStop Color="{StaticResource DatePicker.Border.GradientStop4.Color}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="PART_DisabledVisual" To="1" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <!--<SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>-->
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" To="#FF448DCA" 
                                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" 
                                                                                      Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource DatePicker.Border.MouseOver.GradientStop4.Color}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" 
                                                                                      Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource DatePicker.Border.MouseOver.GradientStop3.Color}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" 
                                                                                      Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource DatePicker.Border.MouseOver.GradientStop2.Color}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Background" 
                                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource DatePicker.Background.Pressed.Color}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Highlight" 
                                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" 
                                                                                      Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource DatePicker.Border.Pressed.GradientStop2.Color}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" 
                                                                                      Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource DatePicker.Border.Pressed.GradientStop3.Color}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" 
                                                                                      Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource DatePicker.Border.Pressed.GradientStop4.Color}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" 
                                                                                      Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource DatePicker.Border.Pressed.GradientStop1.Color}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid Background="{StaticResource DatePicker.Inner.Background}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" 
                                              VerticalAlignment="Center" Width="19">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Highlight" BorderBrush="{StaticResource DatePicker.Inner.Highlight}" BorderThickness="1" 
                                                    CornerRadius="0,0,1,1" Grid.ColumnSpan="4" Margin="-1" Opacity="0" Grid.RowSpan="4" Grid.Row="0"/>
                                            <Border x:Name="Background" BorderThickness="1" CornerRadius=".5" Grid.ColumnSpan="4" Margin="0,-1,0,0" 
                                                    Opacity="1" Grid.RowSpan="3" Grid.Row="1"
                                                    Background="{StaticResource DatePicker.Inner.Inner.Background}" BorderBrush="{StaticResource DatePicker.Inner.Inner.Border}"/>
                                            <Border x:Name="BackgroundGradient" BorderBrush="{StaticResource DatePicker.Inner.Background.Gradient.Border}" 
                                                    BorderThickness="1" CornerRadius=".5" Grid.ColumnSpan="4" Margin="0,-1,0,0" Opacity="1" Grid.RowSpan="3" Grid.Row="1">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                        <GradientStop Color="{StaticResource DatePicker.Inner.Background.GradientStop1.Color}" Offset="0"/>
                                                        <GradientStop Color="{StaticResource DatePicker.Inner.Background.GradientStop2.Color}" Offset="0.375"/>
                                                        <GradientStop Color="{StaticResource DatePicker.Inner.Background.GradientStop3.Color}" Offset="0.625"/>
                                                        <GradientStop Color="{StaticResource DatePicker.Inner.Background.GradientStop4.Color}" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                        <GradientStop Color="{StaticResource DatePicker.Inner.Rectangle.Background.GradientStop1.Color}"/>
                                                        <GradientStop Color="{StaticResource DatePicker.Inner.Rectangle.Background.GradientStop2.Color}" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                        <GradientStop Color="{StaticResource DatePicker.Inner.Rectangle.Border.GradientStop1.Color}"/>
                                                        <GradientStop Color="{StaticResource DatePicker.Inner.Rectangle.Border.GradientStop1.Color}" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <Path Grid.Column="0" Grid.ColumnSpan="4" Fill="{StaticResource DatePicker.Calendar.Border}" 
                                                  HorizontalAlignment="Center" Margin="4,3,4,3" 
                                                  RenderTransformOrigin="0.5,0.5" Grid.RowSpan="3" Grid.Row="1" Stretch="Fill" VerticalAlignment="Center"
                                                  Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 Z"/>
                                            <Ellipse Grid.ColumnSpan="4" Fill="{StaticResource DatePicker.Calendar.Circle.Background}" 
                                                     HorizontalAlignment="Center" Height="3" StrokeThickness="0" 
                                                     VerticalAlignment="Center" Width="3"/>
                                            <Border x:Name="DisabledVisual" BorderBrush="{StaticResource DatePicker.Calendar.Disabled.Border}" 
                                                    BorderThickness="1" CornerRadius="0,0,.5,.5" 
                                                    Grid.ColumnSpan="4" Opacity="0" Grid.RowSpan="4" Grid.Row="0"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" 
                                    HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" 
                                    VerticalAlignment="Top" Width="20"/>
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" 
                                               HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch"/>
                            <Grid x:Name="PART_DisabledVisual" Grid.Column="0" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="{StaticResource DatePicker.Popup.Background}" Grid.Row="0" RadiusX="1" RadiusY="1"/>
                                <Rectangle Grid.Column="1" Fill="{StaticResource DatePicker.Popup.Background}" Height="18" Margin="3,0,3,0" Grid.Row="0" 
                                           RadiusX="1" RadiusY="1" Width="19"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                 DocumentViewers                                                             |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightDocumentViewerStyle" BasedOn="{x:Null}" TargetType="{x:Type DocumentViewer}">
        <Setter Property="Foreground" Value="{StaticResource DocumentViewer.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource DocumentViewer.Background}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ContextMenu" Value="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerContextMenu, 
                                                               TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DocumentViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Focusable="False">
                        <Grid Background="{TemplateBinding Background}" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ContentControl Grid.Column="0" Focusable="{TemplateBinding Focusable}" Grid.Row="0" TabIndex="0"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerToolBarStyleKey, 
                                                                    TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources}}}"/>
                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" CanContentScroll="true" IsTabStop="true" Grid.Row="1" TabIndex="1"
                                          Focusable="{TemplateBinding Focusable}" HorizontalScrollBarVisibility="Auto"/>
                            <DockPanel Grid.Row="1">
                                <FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                <Rectangle Height="10" VerticalAlignment="top" Visibility="Visible">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{StaticResource DocumentViewer.Rectangle.Background.GradientStop1.Color}" Offset="0"/>
                                                    <GradientStop Color="{StaticResource DocumentViewer.Rectangle.Background.GradientStop2.Color}" Offset="1"/>
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </DockPanel>
                            <ContentControl x:Name="PART_FindToolBarHost" Grid.Column="0" Focusable="{TemplateBinding Focusable}" Grid.Row="2" TabIndex="2"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                    Expanders                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{StaticResource Expander.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource Expander.Background}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{StaticResource Expander.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                          Content="{TemplateBinding Header}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                          DockPanel.Dock="Top" FontStretch="{TemplateBinding FontStretch}" Foreground="{TemplateBinding Foreground}" 
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" 
                                          FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" 
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" 
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Expander.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                  GridSplitters                                                              |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="{StaticResource GridSplitter.PreviewStyle.Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LightGridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{StaticResource GridSplitter.Background}"/>
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                   GroupBoxes                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightGroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource GroupBox.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource GroupBox.Inner.Border}" BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4" Grid.Column="0" Grid.ColumnSpan="4" Grid.RowSpan="3" Grid.Row="1"/>
                        <Border BorderBrush="{StaticResource GroupBox.Inner.Inner.Border}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Grid.ColumnSpan="4" 
                                Grid.RowSpan="3" Grid.Row="1">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding ElementName="Header" Path="ActualWidth"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                <Border BorderBrush="{StaticResource GroupBox.Inner.Inner.Inner.Border}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                            </Border>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.RowSpan="2" Grid.Row="0">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" Grid.Row="2" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                     Labels                                                                  |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource Label.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource Label.Background}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Label.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                   ListBoxes                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBox.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource LostBox.Foreground}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                 PasswordBoxes                                                               |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBase.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxBase.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource TextBoxBase.InactiveSelection}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                 ProgressBars                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" 
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                 RadioButtons                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource RadioButton.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource RadioButton.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="{StaticResource RadioButton.Root.Background}" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="100" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual1}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                 RepeatButtons                                                               |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="{StaticResource RepeatButton.Transparent.Background}"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border" Background="{StaticResource ScrollBarButton.Background}" 
                            BorderBrush="{StaticResource ScrollBarButton.Border}" BorderThickness="1" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBarButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBarButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBarButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBarButton.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBarButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBarButton.Disabled.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="templateRoot" BorderThickness="1" SnapsToDevicePixels="true"
                            Background="{StaticResource MenuScrollButton.Background}" BorderBrush="{StaticResource MenuScrollButton.Background}">
                        <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                  RichTextBox                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightRichTextBoxStyle" TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
            </Style>
            <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="{StaticResource RichTextBox.Hyperlink.Foreground}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{StaticResource RichTextBox.Hyperlink.Disabled.Foreground}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="MinWidth" Value="10"/>
        <Style.BasedOn>
            <StaticResource ResourceKey="{x:Type TextBoxBase}"/>
        </Style.BasedOn>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                  ScrollBars                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="{StaticResource ScrollBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource ScrollBar.Foreground}"/>
        <Setter Property="BorderThickness" Value="1,0"/>
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Grid.Row="1"/>
                        <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" 
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 Z" 
                                  Fill="{StaticResource ScrollBar.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" 
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 Z" 
                                  Fill="{StaticResource ScrollBar.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="BorderThickness" Value="0,1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1"/>
                                <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" 
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowLeft" Fill="{StaticResource ScrollBar.Glyph}" Margin="3" Stretch="Uniform"
                                          Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 Z"/>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineRightButton" Command="{x:Static ScrollBar.LineRightCommand}" Grid.Column="2" 
                                              IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowRight" Fill="{StaticResource ScrollBar.Glyph}" Margin="3" Stretch="Uniform"
                                          Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 Z" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                ScrollViewers                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                      Grid.Column="0" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Foreground}"/>
                        </RepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                      Grid.Column="0" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Foreground}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                  Separators                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource Separator.Background}"/>
        <Setter Property="Margin" Value="0,2,0,2"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Height="1" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                    Sliders                                                                  |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                <Border x:Name="TrackBackground" Background="{StaticResource SliderThumb.Track.Background}" 
                        BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                    <Canvas Margin="-1,-6">
                        <Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource Slider.SelectionRange.Background}" Visibility="Hidden" Width="4.0"/>
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" 
                               Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="{StaticResource Slider.IsKeyboardfocused.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LightSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="{StaticResource Slider.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Slider.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource SliderThumb.Foreground}"/>
        <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
            </Trigger>
        </Style.Triggers>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                  StatusBars                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightStatusBarStyle" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{StaticResource StatusBar.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource StatusBar.Foreground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                  TabControls                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TabControl.Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="{StaticResource TabControl.TabPanel.Background}" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" 
                                  Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" 
                                Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource TabControl.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                    ToolBars                                                                 |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightToolBarStyle" TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
                        <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                            <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" 
                                          IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          IsEnabled="{TemplateBinding HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"/>
                            <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" Placement="Bottom" StaysOpen="false" 
                                   IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"  
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <!--<theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                    <Border x:Name="ToolBarSubMenuBorder" Background="{StaticResource ToolBarSubMenuBackground}" 
                                            BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" RenderOptions.ClearTypeHint="Enabled">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                              FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" 
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" 
                                                              WrapWidth="200"/>
                                    </Border>
                                </theme:SystemDropShadowChrome>-->
                                <Border x:Name="ToolBarSubMenuBorder" Background="{StaticResource ToolBarSubMenuBackground}" 
                                        BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" RenderOptions.ClearTypeHint="Enabled">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="Shdw" BlurRadius="3" Color="{StaticResource ToolBar.DropShadow.Color}" ShadowDepth="5" />
                                    </Border.Effect>
                                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                            FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" 
                                                            WrapWidth="200"/>
                                </Border>
                            </Popup>
                        </Grid>
                        <Border x:Name="MainPanelBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
                            <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                <Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Style="{StaticResource ToolBarThumbStyle}" Width="10"/>
                                <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                            <!--<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>-->
                            <!--<Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>-->
                            <!--<Setter Property="Color" TargetName="Shdw" Value="{StaticResource ToolBar.DropShadow}"/>-->
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                            <Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                            <Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
                            <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                            <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
                            <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
                            <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                            <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                            <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                            <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                            <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                            <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Disabled.Foreground.Color}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{StaticResource ToolBar.HighContrast.Background}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>










    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
         |                                                                                                                             |
         |                                                    TreeViews                                                                |
         |                                                                                                                             |
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <Style x:Key="LightTreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource TreeView.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TreeView.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TreeView.Foreground}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="tv_scrollviewer" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" 
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="tv_scrollviewer" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>